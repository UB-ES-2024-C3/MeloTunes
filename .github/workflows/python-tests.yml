name: Run Backend Tests

on:
  push:
    branches:
      - '*'  
  pull_request:
    branches:
      - '*'  

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repositorio
      - name: Check out the repository
        uses: actions/checkout@v3

      # 2. Configura Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.3"

      # 3. Instala Poetry
      - name: Install Poetry
        run: |
          pip install poetry
          poetry --version

      # 4. Instala las dependencias del backend
      - name: Install dependencies
        working-directory: ./backend
        run: |
          poetry install

      # 5. Crear el archivo .env con las variables necesarias
      - name: Set up environment variables
        run: |
          echo "PROJECT_NAME=mt_app" >> .env
          echo "FIRST_SUPERUSER=Melotunes" >> .env
          echo "FIRST_SUPERUSER_PASSWORD=Melotunes123" >> .env
          echo "BACKEND_CORS_ORIGINS=http://localhost:8080" >> .env
          echo "DATABASE_URL=sqlite:///./mt_db.sqlite" >> .env

      # 6. Ejecuta las migraciones de Alembic
      - name: Run Alembic migrations
        working-directory: ./backend
        run: |
          poetry run alembic upgrade head

      # 7. Ejecuta los tests con pytest
      - name: Run tests
        working-directory: ./backend
        run: |
          poetry run pytest --disable-warnings

      # 8. Configura Node.js para el frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"  # Usa la misma versión que en tu entorno local

      # 9. Instala dependencias del frontend
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          npm install
      
      # 10. Instala wait-on
      - name: Install wait-on
        run: |
          npm install -g wait-on

      # 11. Inicia el servidor del frontend
      - name: Start frontend server
        working-directory: ./frontend
        run: |
          npm run dev &
        env:
          CI: true

      # 12. Espera a que el servidor esté listo
      - name: Wait for server to be ready
        run: |
          npx wait-on http://localhost:8080

      # 13. Ejecuta los tests de Cypress
      - name: Run Cypress tests
        working-directory: ./frontend
        run: |
          npx cypress run
